//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/julia/RiderProjects/RaccoonDB/RaccoonDB\RaccoonSQL.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RaccoonSQLParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IRaccoonSQLListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery([NotNull] RaccoonSQLParser.QueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery([NotNull] RaccoonSQLParser.QueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.createQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateQuery([NotNull] RaccoonSQLParser.CreateQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.createQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateQuery([NotNull] RaccoonSQLParser.CreateQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.ifNotExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfNotExists([NotNull] RaccoonSQLParser.IfNotExistsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.ifNotExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfNotExists([NotNull] RaccoonSQLParser.IfNotExistsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.dropQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropQuery([NotNull] RaccoonSQLParser.DropQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.dropQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropQuery([NotNull] RaccoonSQLParser.DropQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.ifExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfExists([NotNull] RaccoonSQLParser.IfExistsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.ifExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfExists([NotNull] RaccoonSQLParser.IfExistsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.alterQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterQuery([NotNull] RaccoonSQLParser.AlterQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.alterQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterQuery([NotNull] RaccoonSQLParser.AlterQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.explainQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplainQuery([NotNull] RaccoonSQLParser.ExplainQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.explainQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplainQuery([NotNull] RaccoonSQLParser.ExplainQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.explainColumnsOnTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplainColumnsOnTable([NotNull] RaccoonSQLParser.ExplainColumnsOnTableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.explainColumnsOnTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplainColumnsOnTable([NotNull] RaccoonSQLParser.ExplainColumnsOnTableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.explainIndicesOnTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplainIndicesOnTable([NotNull] RaccoonSQLParser.ExplainIndicesOnTableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.explainIndicesOnTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplainIndicesOnTable([NotNull] RaccoonSQLParser.ExplainIndicesOnTableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.truncateQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTruncateQuery([NotNull] RaccoonSQLParser.TruncateQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.truncateQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTruncateQuery([NotNull] RaccoonSQLParser.TruncateQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.createIndex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateIndex([NotNull] RaccoonSQLParser.CreateIndexContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.createIndex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateIndex([NotNull] RaccoonSQLParser.CreateIndexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex([NotNull] RaccoonSQLParser.IndexContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex([NotNull] RaccoonSQLParser.IndexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.indexColumns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexColumns([NotNull] RaccoonSQLParser.IndexColumnsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.indexColumns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexColumns([NotNull] RaccoonSQLParser.IndexColumnsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.indexColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexColumn([NotNull] RaccoonSQLParser.IndexColumnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.indexColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexColumn([NotNull] RaccoonSQLParser.IndexColumnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.createTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateTable([NotNull] RaccoonSQLParser.CreateTableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.createTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateTable([NotNull] RaccoonSQLParser.CreateTableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable([NotNull] RaccoonSQLParser.TableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable([NotNull] RaccoonSQLParser.TableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.tableColumns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableColumns([NotNull] RaccoonSQLParser.TableColumnsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.tableColumns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableColumns([NotNull] RaccoonSQLParser.TableColumnsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.tableColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableColumn([NotNull] RaccoonSQLParser.TableColumnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.tableColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableColumn([NotNull] RaccoonSQLParser.TableColumnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.columnConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnConstraint([NotNull] RaccoonSQLParser.ColumnConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.columnConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnConstraint([NotNull] RaccoonSQLParser.ColumnConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.autoValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAutoValue([NotNull] RaccoonSQLParser.AutoValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.autoValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAutoValue([NotNull] RaccoonSQLParser.AutoValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.notNullConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotNullConstraint([NotNull] RaccoonSQLParser.NotNullConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.notNullConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotNullConstraint([NotNull] RaccoonSQLParser.NotNullConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.uniqueConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniqueConstraint([NotNull] RaccoonSQLParser.UniqueConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.uniqueConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniqueConstraint([NotNull] RaccoonSQLParser.UniqueConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.primaryKeyConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryKeyConstraint([NotNull] RaccoonSQLParser.PrimaryKeyConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.primaryKeyConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryKeyConstraint([NotNull] RaccoonSQLParser.PrimaryKeyConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.foreignKeyConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeignKeyConstraint([NotNull] RaccoonSQLParser.ForeignKeyConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.foreignKeyConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeignKeyConstraint([NotNull] RaccoonSQLParser.ForeignKeyConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.addColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddColumn([NotNull] RaccoonSQLParser.AddColumnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.addColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddColumn([NotNull] RaccoonSQLParser.AddColumnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.dropColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropColumn([NotNull] RaccoonSQLParser.DropColumnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.dropColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropColumn([NotNull] RaccoonSQLParser.DropColumnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.alterColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterColumn([NotNull] RaccoonSQLParser.AlterColumnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.alterColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterColumn([NotNull] RaccoonSQLParser.AlterColumnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.selectQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectQuery([NotNull] RaccoonSQLParser.SelectQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.selectQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectQuery([NotNull] RaccoonSQLParser.SelectQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.updateQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpdateQuery([NotNull] RaccoonSQLParser.UpdateQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.updateQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpdateQuery([NotNull] RaccoonSQLParser.UpdateQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.deleteQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteQuery([NotNull] RaccoonSQLParser.DeleteQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.deleteQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteQuery([NotNull] RaccoonSQLParser.DeleteQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonSQLParser.insertQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsertQuery([NotNull] RaccoonSQLParser.InsertQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonSQLParser.insertQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsertQuery([NotNull] RaccoonSQLParser.InsertQueryContext context);
}
