//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/julia/RiderProjects/RaccoonDB/RaccoonDB\RaccoonSQL.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="RaccoonSQLParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IRaccoonSQLVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery([NotNull] RaccoonSQLParser.QueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.createQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateQuery([NotNull] RaccoonSQLParser.CreateQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.ifNotExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfNotExists([NotNull] RaccoonSQLParser.IfNotExistsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.dropQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDropQuery([NotNull] RaccoonSQLParser.DropQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.ifExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfExists([NotNull] RaccoonSQLParser.IfExistsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.alterQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlterQuery([NotNull] RaccoonSQLParser.AlterQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.explainQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplainQuery([NotNull] RaccoonSQLParser.ExplainQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.explainColumnsOnTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplainColumnsOnTable([NotNull] RaccoonSQLParser.ExplainColumnsOnTableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.explainIndicesOnTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplainIndicesOnTable([NotNull] RaccoonSQLParser.ExplainIndicesOnTableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.truncateQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTruncateQuery([NotNull] RaccoonSQLParser.TruncateQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.createIndex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateIndex([NotNull] RaccoonSQLParser.CreateIndexContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndex([NotNull] RaccoonSQLParser.IndexContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.indexColumns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexColumns([NotNull] RaccoonSQLParser.IndexColumnsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.indexColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexColumn([NotNull] RaccoonSQLParser.IndexColumnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.createTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateTable([NotNull] RaccoonSQLParser.CreateTableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTable([NotNull] RaccoonSQLParser.TableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.tableColumns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableColumns([NotNull] RaccoonSQLParser.TableColumnsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.tableColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableColumn([NotNull] RaccoonSQLParser.TableColumnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.columnConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColumnConstraint([NotNull] RaccoonSQLParser.ColumnConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.autoValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAutoValue([NotNull] RaccoonSQLParser.AutoValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.notNullConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotNullConstraint([NotNull] RaccoonSQLParser.NotNullConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.uniqueConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniqueConstraint([NotNull] RaccoonSQLParser.UniqueConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.primaryKeyConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryKeyConstraint([NotNull] RaccoonSQLParser.PrimaryKeyConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.foreignKeyConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeignKeyConstraint([NotNull] RaccoonSQLParser.ForeignKeyConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.addColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddColumn([NotNull] RaccoonSQLParser.AddColumnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.dropColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDropColumn([NotNull] RaccoonSQLParser.DropColumnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.alterColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlterColumn([NotNull] RaccoonSQLParser.AlterColumnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.selectQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectQuery([NotNull] RaccoonSQLParser.SelectQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.updateQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUpdateQuery([NotNull] RaccoonSQLParser.UpdateQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.deleteQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeleteQuery([NotNull] RaccoonSQLParser.DeleteQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonSQLParser.insertQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInsertQuery([NotNull] RaccoonSQLParser.InsertQueryContext context);
}
